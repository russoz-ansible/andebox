name: Semantic Release

permissions: {}  # remove top-level permissions

on:
  workflow_dispatch:  # Manual trigger only for now
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+*"
    branches: [main]

jobs:
  release:
    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        ref: ${{ github.head_ref || github.ref_name }}

    - name: Python Setup
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install poetry

    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"

    - name: Create Build Environment
      run: |
        poetry install --verbose --with dev
        poetry lock
        if ! git diff --quiet poetry.lock; then
          git add poetry.lock
          git commit -m "chore: update poetry.lock"
          git push
        fi

    - name: Run Tests, generate reports
      env:
        PYTHONPATH: .
      run: |
        poetry run flake8 -v . --count --show-source --statistics
        poetry run pytest -v \
          --cov-report=xml \
          --cov-report=term \
          --junitxml=junit.xml

    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true

    - name: Create Release
      env:
        POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
      run: |
        GH_TOKEN=${{ github.token }} poetry run semantic-release --verbose version
        GH_TOKEN=${{ github.token }} poetry run semantic-release --verbose publish
        if [ -d dist ] && [ "$(ls -A dist)" ]; then
          poetry publish --no-interaction
        else
          echo "No build artifacts to publish."
        fi
