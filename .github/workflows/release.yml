# (C) 2025 Alexei Znamensky
# Licensed under the MIT License. See LICENSES/MIT.txt for details.
# SPDX-FileCopyrightText: 2025 Alexei Znamensky
# SPDX-License-Identifier: MIT

name: Semantic Release

permissions: {}  # remove top-level permissions

on:
  workflow_dispatch:
  push:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref_name }}

      - name: Python setup
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --with dev

      - name: Run linter and tests
        env:
          PYTHONPATH: .
        run: |
          poetry run flake8 -v . --count --show-source --statistics
          poetry run pytest -v --cov

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

  build:
    runs-on: ubuntu-latest
    needs: test
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
          fetch-depth: 0
          ref: ${{ github.head_ref || github.ref_name }}

      - name: Python setup
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install --with dev

      - name: Create Release
        env:
          POETRY_PYPI_TOKEN_PYPI: ${{ secrets.PYPI_TOKEN }}
          GH_TOKEN: ${{ github.token }}
        run: |
          poetry run semantic-release --verbose version
          poetry run semantic-release --verbose publish

      - name: Check if dist folder has content
        id: check_dist
        run: |
          if [ -d dist ] && [ "$(ls -A dist)" ]; then
            echo "has_content=true" >> $GITHUB_OUTPUT
          else
            echo "has_content=false" >> $GITHUB_OUTPUT
          fi

      - name: Store the distribution packages
        uses: actions/upload-artifact@v4
        if: ${{ steps.check_dist.outputs.has_content == 'true' }}
        with:
          name: andebox-distributions
          path: dist/
    outputs:
      has_content: ${{ steps.check_dist.outputs.has_content }}

  publish-to-pypi:
    needs:
      - build
    if: ${{ needs.build.outputs.has_content == 'true' }}
    runs-on: ubuntu-latest
    environment:
      name: pypi
      url: https://pypi.org/p/andebox
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: andebox-distributions
          path: dist/
      - name: Publish distribution ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
