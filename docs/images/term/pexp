#!/usr/bin/env python3
# Copyright (c) 2025, Alexei Znamensky
# All rights reserved.
#
# This file is part of the Andebox project and is distributed under the terms
# of the BSD 3-Clause License. See LICENSE file for details.
import os
import random
import re
import sys
import time

import pexpect


HUMAN_DELAY = (0.03, 0.12)  # min/max seconds between keystrokes


def typing_delay():
    return random.uniform(*HUMAN_DELAY) + 0.01 * random.randint(0, 6)  # add some jitter


def human_type(child, text):
    for c in text:
        time.sleep(typing_delay())
        child.send(c)
        c = re.sub(r"([^\r])\n", r"\1\r\n", c)  # Convert \n to \r\n
        print(c, end="", flush=True)
    time.sleep(typing_delay() + 0.2)


def main():
    input_file = os.environ.get("PEXP_FILE")
    if not input_file:
        print("Error: PEXP_FILE environment variable not set.", file=sys.stderr)
        sys.exit(1)

    with open(input_file) as f:
        lines = [line.strip() for line in f if line.strip()]
    lines = [line for line in lines if not line.startswith("#")]
    if not lines:
        print("No commands to execute.", file=sys.stderr)
        sys.exit(0)

    child = pexpect.spawn(
        "bash",
        encoding="utf-8",
        timeout=600,
    )
    child.logfile_read = sys.stdout
    child.setecho(False)
    child.expect(r"\$ ")

    for line in lines:
        if line.startswith("SEND(") and line.endswith(")"):
            cmd = line[5:-1]
            human_type(child, f"{cmd}\r")
        elif line.startswith("EXPECT(") and line.endswith(")"):
            pat = line[7:-1]
            # Use regex for matching
            child.expect(re.escape(pat))

    child.sendeof()


if __name__ == "__main__":
    main()

# code: language=python tabSize=4
